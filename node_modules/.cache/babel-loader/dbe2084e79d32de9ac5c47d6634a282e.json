{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\SK\\\\Downloads\\\\New folder\\\\simple-react-signup-form-with-validation-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SK\\\\Downloads\\\\New folder\\\\simple-react-signup-form-with-validation-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\SK\\\\Downloads\\\\New folder\\\\simple-react-signup-form-with-validation-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\SK\\\\Downloads\\\\New folder\\\\simple-react-signup-form-with-validation-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\SK\\\\Downloads\\\\New folder\\\\simple-react-signup-form-with-validation-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\SK\\\\Downloads\\\\New folder\\\\simple-react-signup-form-with-validation-main\\\\src\\\\Components\\\\form-component.js\";\nimport React from \"react\";\nvar emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nvar passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n\nvar FormComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormComponent, _React$Component);\n\n  var _super = _createSuper(FormComponent);\n\n  function FormComponent() {\n    var _this;\n\n    _classCallCheck(this, FormComponent);\n\n    _this = _super.call(this);\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      emailAddress: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      firstNameError: \"\",\n      emailAddressError: \"\",\n      passwordError: \"\",\n      passwordConfirmationError: \"\",\n      isFormSubmitted: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.validateFirstName = _this.validateFirstName.bind(_assertThisInitialized(_this));\n    _this.validateLastName = _this.validateLastName.bind(_assertThisInitialized(_this));\n    _this.validateEmailAddress = _this.validateEmailAddress.bind(_assertThisInitialized(_this));\n    _this.validatePassword = _this.validatePassword.bind(_assertThisInitialized(_this));\n    _this.validatePasswordConfirmation = _this.validatePasswordConfirmation.bind(_assertThisInitialized(_this));\n    _this.validateField = _this.validateField.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FormComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n      return;\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(event) {\n      var name = event.target.name;\n      this.validateField(name);\n      return;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var formFields = [\"firstName\", \"lastName\", \"emailAddress\", \"password\", \"passwordConfirmation\"];\n      var isValid = true;\n      formFields.forEach(function (field) {\n        isValid = _this2.validateField(field) && isValid;\n      });\n      if (isValid) this.setState({\n        isFormSubmitted: true\n      });else this.setState({\n        isFormSubmitted: false\n      });\n      return this.state.isFormSubmitted;\n    }\n  }, {\n    key: \"validateField\",\n    value: function validateField(name) {\n      var isValid = false;\n      if (name === \"firstName\") isValid = this.validateFirstName();else if (name === \"lastName\") isValid = this.validateLastName();else if (name === \"emailAddress\") isValid = this.validateEmailAddress();else if (name === \"password\") isValid = this.validatePassword();else if (name === \"passwordConfirmation\") isValid = this.validatePasswordConfirmation();\n      return isValid;\n    }\n  }, {\n    key: \"validateFirstName\",\n    value: function validateFirstName() {\n      var firstNameError = \"\";\n      var value = this.state.firstName;\n      if (value.trim() === \"\") firstNameError = \"First Name is required\";\n      this.setState({\n        firstNameError\n      });\n      return firstNameError === \"\";\n    }\n  }, {\n    key: \"validateLastName\",\n    value: function validateLastName() {\n      var lastNameError = \"\";\n      var value = this.state.lastName;\n      if (value.trim() === \"\") lastNameError = \"Last Name is required\";\n      this.setState({\n        lastNameError\n      });\n      return lastNameError === \"\";\n    }\n  }, {\n    key: \"validateEmailAddress\",\n    value: function validateEmailAddress() {\n      var emailAddressError = \"\";\n      var value = this.state.emailAddress;\n      if (value.trim === \"\") emailAddressError = \"Email Address is required\";else if (!emailValidator.test(value)) emailAddressError = \"Email is not valid\";\n      this.setState({\n        emailAddressError\n      });\n      return emailAddressError === \"\";\n    }\n  }, {\n    key: \"validatePassword\",\n    value: function validatePassword() {\n      var passwordError = \"\";\n      var value = this.state.password;\n      if (value.trim === \"\") passwordError = \"Password is required\";else if (!passwordValidator.test(value)) passwordError = \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\n      this.setState({\n        passwordError\n      });\n      return passwordError === \"\";\n    }\n  }, {\n    key: \"validatePasswordConfirmation\",\n    value: function validatePasswordConfirmation() {\n      var passwordConfirmationError = \"\";\n      if (this.state.password !== this.state.passwordConfirmation) passwordConfirmationError = \"Password does not match Confirmation\";\n      this.setState({\n        passwordConfirmationError\n      });\n      return passwordConfirmationError === \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, \"SignUp Form\"), this.state.isFormSubmitted ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, \"Thanks for signing up, find your details below:\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, \"First Name: \", this.state.firstName), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, \"Last Name: \", this.state.lastName), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }, \"Email Address: \", this.state.emailAddress)) : /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        name: \"firstName\",\n        value: this.state.firstName,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }), this.state.firstNameError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"errorMsg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, this.state.firstNameError), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        name: \"lastName\",\n        value: this.state.lastName,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }), this.state.lastNameError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"errorMsg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, this.state.lastNameError), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"Email Address\",\n        name: \"emailAddress\",\n        value: this.state.emailAddress,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }), this.state.emailAddressError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"errorMsg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }, this.state.emailAddressError), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }), this.state.passwordError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"errorMsg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, this.state.passwordError), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        name: \"passwordConfirmation\",\n        value: this.state.passwordConfirmation,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }), this.state.passwordConfirmationError && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"errorMsg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }\n      }, this.state.passwordConfirmationError), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }\n      }, \"Signup\"))));\n    }\n  }]);\n\n  return FormComponent;\n}(React.Component);\n\nexport default FormComponent;","map":{"version":3,"sources":["C:/Users/SK/Downloads/New folder/simple-react-signup-form-with-validation-main/src/Components/form-component.js"],"names":["React","emailValidator","passwordValidator","FormComponent","state","firstName","lastName","emailAddress","password","passwordConfirmation","firstNameError","emailAddressError","passwordError","passwordConfirmationError","isFormSubmitted","handleChange","bind","handleBlur","handleSubmit","validateFirstName","validateLastName","validateEmailAddress","validatePassword","validatePasswordConfirmation","validateField","event","target","name","value","setState","preventDefault","formFields","isValid","forEach","field","trim","lastNameError","test","textAlign","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst passwordValidator = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n\nclass FormComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      emailAddress: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      firstNameError: \"\",\n      emailAddressError: \"\",\n      passwordError: \"\",\n      passwordConfirmationError: \"\",\n      isFormSubmitted: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateFirstName = this.validateFirstName.bind(this);\n    this.validateLastName = this.validateLastName.bind(this);\n    this.validateEmailAddress = this.validateEmailAddress.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n    this.validatePasswordConfirmation = this.validatePasswordConfirmation.bind(\n      this\n    );\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n\n    return;\n  }\n\n  handleBlur(event) {\n    const { name } = event.target;\n\n    this.validateField(name);\n    return;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let formFields = [\n      \"firstName\",\n      \"lastName\",\n      \"emailAddress\",\n      \"password\",\n      \"passwordConfirmation\"\n    ];\n    let isValid = true;\n    formFields.forEach(field => {\n      isValid = this.validateField(field) && isValid;\n    });\n\n    if (isValid) this.setState({ isFormSubmitted: true });\n    else this.setState({ isFormSubmitted: false });\n\n    return this.state.isFormSubmitted;\n  }\n\n  validateField(name) {\n    let isValid = false;\n\n    if (name === \"firstName\") isValid = this.validateFirstName();\n    else if (name === \"lastName\") isValid = this.validateLastName();\n    else if (name === \"emailAddress\") isValid = this.validateEmailAddress();\n    else if (name === \"password\") isValid = this.validatePassword();\n    else if (name === \"passwordConfirmation\")\n      isValid = this.validatePasswordConfirmation();\n    return isValid;\n  }\n\n  validateFirstName() {\n    let firstNameError = \"\";\n    const value = this.state.firstName;\n    if (value.trim() === \"\") firstNameError = \"First Name is required\";\n\n    this.setState({\n      firstNameError\n    });\n    return firstNameError === \"\";\n  }\n\n  validateLastName() {\n    let lastNameError = \"\";\n    const value = this.state.lastName;\n    if (value.trim() === \"\") lastNameError = \"Last Name is required\";\n\n    this.setState({\n      lastNameError\n    });\n    return lastNameError === \"\";\n  }\n\n  validateEmailAddress() {\n    let emailAddressError = \"\";\n    const value = this.state.emailAddress;\n    if (value.trim === \"\") emailAddressError = \"Email Address is required\";\n    else if (!emailValidator.test(value))\n      emailAddressError = \"Email is not valid\";\n\n    this.setState({\n      emailAddressError\n    });\n    return emailAddressError === \"\";\n  }\n\n  validatePassword() {\n    let passwordError = \"\";\n    const value = this.state.password;\n    if (value.trim === \"\") passwordError = \"Password is required\";\n    else if (!passwordValidator.test(value))\n      passwordError =\n        \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\n\n    this.setState({\n      passwordError\n    });\n    return passwordError === \"\";\n  }\n\n  validatePasswordConfirmation() {\n    let passwordConfirmationError = \"\";\n    if (this.state.password !== this.state.passwordConfirmation)\n      passwordConfirmationError = \"Password does not match Confirmation\";\n\n    this.setState({\n      passwordConfirmationError\n    });\n    return passwordConfirmationError === \"\";\n  }\n\n  render() {\n    return (\n      <div className=\"main\" >\n        <h3>SignUp Form</h3>\n        {this.state.isFormSubmitted ? (\n          <div className=\"details\">\n            <h3>Thanks for signing up, find your details below:</h3>\n            <div>First Name: {this.state.firstName}</div>\n            <div>Last Name: {this.state.lastName}</div>\n            <div>Email Address: {this.state.emailAddress}</div>\n          </div>\n        ) : (\n          <div style={{textAlign:\"center\"}}>\n          <form onSubmit={this.handleSubmit} >\n            <input\n              type=\"text\"\n              placeholder=\"First Name\"\n              name=\"firstName\"\n              value={this.state.firstName}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.firstNameError && (\n              <div className=\"errorMsg\">{this.state.firstNameError}</div>\n            )}\n            <input\n              type=\"text\"\n              placeholder=\"Last Name\"\n              name=\"lastName\"\n              value={this.state.lastName}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.lastNameError && (\n              <div className=\"errorMsg\">{this.state.lastNameError}</div>\n            )}\n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"emailAddress\"\n              value={this.state.emailAddress}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.emailAddressError && (\n              <div className=\"errorMsg\">{this.state.emailAddressError}</div>\n            )}\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.passwordError && (\n              <div className=\"errorMsg\">{this.state.passwordError}</div>\n            )}\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              name=\"passwordConfirmation\"\n              value={this.state.passwordConfirmation}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              autoComplete=\"off\"\n            />\n            <br />\n            {this.state.passwordConfirmationError && (\n              <div className=\"errorMsg\">\n                {this.state.passwordConfirmationError}\n              </div>\n            )}\n            <button>Signup</button>\n          </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default FormComponent;\n"]},"metadata":{},"sourceType":"module"}